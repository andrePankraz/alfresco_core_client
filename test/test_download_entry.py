# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from alfresco_core_api_client.models.download_entry import DownloadEntry

class TestDownloadEntry(unittest.TestCase):
    """DownloadEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DownloadEntry:
        """Test DownloadEntry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DownloadEntry`
        """
        model = DownloadEntry()
        if include_optional:
            return DownloadEntry(
                entry = alfresco_core_api_client.models.download.Download(
                    files_added = 56, 
                    bytes_added = 56, 
                    id = '', 
                    total_files = 56, 
                    total_bytes = 56, 
                    status = 'PENDING', )
            )
        else:
            return DownloadEntry(
                entry = alfresco_core_api_client.models.download.Download(
                    files_added = 56, 
                    bytes_added = 56, 
                    id = '', 
                    total_files = 56, 
                    total_bytes = 56, 
                    status = 'PENDING', ),
        )
        """

    def testDownloadEntry(self):
        """Test DownloadEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
