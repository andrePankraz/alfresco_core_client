# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from alfresco_core_api_client.models.person_body_update import PersonBodyUpdate

class TestPersonBodyUpdate(unittest.TestCase):
    """PersonBodyUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PersonBodyUpdate:
        """Test PersonBodyUpdate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PersonBodyUpdate`
        """
        model = PersonBodyUpdate()
        if include_optional:
            return PersonBodyUpdate(
                first_name = '',
                last_name = '',
                description = '',
                email = '',
                skype_id = '',
                google_id = '',
                instant_message_id = '',
                job_title = '',
                location = '',
                company = alfresco_core_api_client.models.company.Company(
                    organization = '', 
                    address1 = '', 
                    address2 = '', 
                    address3 = '', 
                    postcode = '', 
                    telephone = '', 
                    fax = '', 
                    email = '', ),
                mobile = '',
                telephone = '',
                user_status = '',
                enabled = True,
                email_notifications_enabled = True,
                password = '',
                old_password = '',
                aspect_names = [
                    ''
                    ],
                properties = None
            )
        else:
            return PersonBodyUpdate(
        )
        """

    def testPersonBodyUpdate(self):
        """Test PersonBodyUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
