# coding: utf-8

"""
    Alfresco Content Services REST API

    **Core API**  Provides access to the core features of Alfresco Content Services. 

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from alfresco_core_api_client.models.site_entry import SiteEntry

class TestSiteEntry(unittest.TestCase):
    """SiteEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteEntry:
        """Test SiteEntry
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteEntry`
        """
        model = SiteEntry()
        if include_optional:
            return SiteEntry(
                entry = alfresco_core_api_client.models.site.Site(
                    id = '', 
                    guid = '', 
                    title = '', 
                    description = '', 
                    visibility = 'PRIVATE', 
                    preset = '', 
                    role = 'SiteConsumer', )
            )
        else:
            return SiteEntry(
                entry = alfresco_core_api_client.models.site.Site(
                    id = '', 
                    guid = '', 
                    title = '', 
                    description = '', 
                    visibility = 'PRIVATE', 
                    preset = '', 
                    role = 'SiteConsumer', ),
        )
        """

    def testSiteEntry(self):
        """Test SiteEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
